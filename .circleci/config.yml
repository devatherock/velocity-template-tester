slack_image: &slack_image
  docker:
    - image: devatherock/simple-slack:0.7.0
      auth:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD

work_directory: &work_directory
  working_directory: ~/velocity-template-tester

resource_class: &resource_class
  resource_class: small
  
release_filter: &release_filter
  filters:
    branches:
      only: non-existent-branch
    tags:
      only: /^v[0-9\.]+$/
      
pr_filter: &pr_filter
  filters:
    branches:
      ignore: master
  
executors:
  jdk-executor:
    docker:
      - image: cimg/openjdk:11.0
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    <<: *resource_class
    <<: *work_directory
    environment:
      # To generate swagger UI
      JAVA_TOOL_OPTIONS: '-Dmicronaut.openapi.views.spec=swagger-ui.enabled=true,swagger-ui.theme=flattop'

version: 2.1
jobs:
  changelog_updater:
    docker:
    - image: devatherock/changelog-updater:0.1.0
      auth:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
    <<: *resource_class
    environment:
      VELA_BUILD_AUTHOR: "renovate[bot]"
      VELA_BUILD_AUTHOR_EMAIL: "29139614+renovate[bot]@users.noreply.github.com"
    steps:
      - add_ssh_keys:
          fingerprints:
            - "4a:86:fe:0e:c3:0e:ad:0d:1d:5c:3e:48:cf:28:39:5d"
      - checkout
      - run: sh /scripts/entry-point.sh
      
  validate_yamls:
    docker:
      - image: devatherock/drone-yaml-validator:2.1.0
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    <<: *resource_class
    <<: *work_directory
    steps:
      - checkout
      - run: sh /scripts/entry-point.sh

  test:
    executor: jdk-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/velocity-template-tester
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies
      - run: |
          ./gradlew check sonarqube -Dsonar.login=$SONAR_TOKEN
      - store_test_results:
          path: build/test-results
          
  add_timestamp_to_static_files:
    executor: jdk-executor
    <<: *work_directory
    steps:
      - checkout
      - run: sh build_time.sh
      - persist_to_workspace:
          root: ~/velocity-template-tester
          paths:
            - src/main/resources/public
          
  minify_js:
    docker:
      - image: devatherock/minify-js:1.0.3
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    <<: *resource_class
    <<: *work_directory
    environment:
      PARAMETER_INPUT_PATH: src/main/resources/public
      PARAMETER_ADD_SUFFIX: false
    steps:
      - checkout
      - attach_workspace:
          at: ~/velocity-template-tester
      - run: sh /entrypoint.sh
      - persist_to_workspace:
          root: ~/velocity-template-tester
          paths:
            - src/main/resources/public

  build:
    executor: jdk-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/velocity-template-tester
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies
      - run: |
          rm -rf ~/.gradle
          ./gradlew build sonarqube -Dsonar.login=$SONAR_TOKEN
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
          
  dockerhub_readme:
    machine:
      image: ubuntu-2204:2023.04.2
    steps:
      - checkout
      - run: |
          docker run -v $PWD:/workspace \
              -e DOCKERHUB_USERNAME \
              -e DOCKERHUB_PASSWORD \
              -e DOCKERHUB_REPOSITORY='devatherock/velocity-template-tester' \
              -e SHORT_DESCRIPTION='UI/API for testing Apache Velocity templates' \
              -e README_FILEPATH='/workspace/README.md' \
              peterevans/dockerhub-description:3.4.1
          
  integration_test:
    machine:
      image: ubuntu-2204:2023.04.2
    steps:
      - checkout
      - attach_workspace:
          at: ~/velocity-template-tester
      - run: |
          make integration-test
      - store_test_results:
          path: build/test-results
          
  publish:
    executor: jdk-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/velocity-template-tester
      - run: |
          TAG=${CIRCLE_SHA1:0:8}
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker buildx create --name rockbuilder \
            --driver docker-container --use --bootstrap
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --push \
            -t devatherock/velocity-template-tester:$TAG \
            -t devatherock/velocity-template-tester:latest \
            -f docker/Dockerfile .
          
  publish_release:
    executor: jdk-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/velocity-template-tester
      - run: |
          TAG=${CIRCLE_TAG#v}
          DEV_TAG=${CIRCLE_SHA1:0:8}
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker buildx create --name rockbuilder \
            --driver docker-container --use --bootstrap
          docker buildx imagetools create \
            -t devatherock/velocity-template-tester:$TAG devatherock/velocity-template-tester:$DEV_TAG

  deploy:
    executor: jdk-executor
    <<: *resource_class
    steps:
      - run:
          name: Trigger deployment to render.com
          command: |
            curl $RENDER_DEPLOY_HOOK

  notify:
    <<: *slack_image
    <<: *resource_class
    environment:
      TEXT: "Success: {{.CircleBuildUrl}} by {{.CircleUsername}}"
      CHANNEL: general
      TITLE: "Build completed"
    steps:
      - run: /bin/simpleslack -c "#33ad7f" || true

workflows:
  version: 2.1
  build_publish:
    jobs:
      - validate_yamls:
          context:
            - docker-credentials
          filters:
            branches:
              only: master
      - add_timestamp_to_static_files:
          context:
            - docker-credentials
          requires:
            - validate_yamls
      - minify_js:
          context:
            - docker-credentials
          requires:
            - add_timestamp_to_static_files
      - build:
          context:
            - docker-credentials
            - sonar-credentials
          requires:
            - minify_js
      - publish:
          context:
            - docker-credentials
          requires:
            - build
      - dockerhub_readme:
          context:
            - docker-credentials
            - dockerhub-readme-credentials
          requires:
            - publish
      - integration_test:
          context:
            - docker-credentials
          requires:
            - dockerhub_readme
      - notify:
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - integration_test
            
  release:
    jobs:
      - publish_release:
          context:
            - docker-credentials
          <<: *release_filter
      - deploy:
          context:
            - docker-credentials
          <<: *release_filter  
          requires:
            - publish_release
      - notify:
          context:
            - docker-credentials
            - slack-webhook
          <<: *release_filter  
          requires:
            - deploy
            
  pr_check:
    jobs:
      - build:
          context:
            - docker-credentials
            - sonar-credentials
          filters:
            branches:
              only: prune-cache
