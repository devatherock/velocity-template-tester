docker_auth: &docker_auth
  auth:
    username: $DOCKER_USERNAME
    password: $DOCKER_PASSWORD

vm_executor_image: &vm_executor_image
  machine:
    image: ubuntu-2204:2023.04.2    

work_directory: &work_directory
  working_directory: ~/velocity-template-tester

resource_class: &resource_class
  resource_class: small

release_filter: &release_filter
  filters:
    branches:
      only: non-existent-branch
    tags:
      only: /^v[0-9\.]+$/

pr_filter: &pr_filter
  filters:
    branches:
      ignore: master

orbs:
  templates: devatherock/circleci-templates@0.7.0

parameters:
  repo_name:
    type: string
    default: "velocity-template-tester"

executors:
  jdk-executor:
    docker:
      - image: cimg/openjdk:17.0.11
        <<: *docker_auth
    <<: *resource_class
    <<: *work_directory
    environment:
      # To generate swagger UI
      JAVA_TOOL_OPTIONS: '-Dmicronaut.openapi.views.spec=swagger-ui.enabled=true,swagger-ui.theme=flattop'
  machine-executor:
    <<: *vm_executor_image
    resource_class: medium
    <<: *work_directory
  arm-executor:
    <<: *vm_executor_image
    resource_class: arm.medium
    <<: *work_directory

version: 2.1
jobs:
  test:
    executor: arm-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/velocity-template-tester
      - restore_cache:
          keys:
            - v1-integration-{{ checksum "build.gradle" }}
            - v1-integration
      - run: |
          ./gradlew check sonar -Dsonar.token=$SONAR_TOKEN
          make fast-build docker-build integration-test
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-integration-{{ checksum "build.gradle" }}
      - store_artifacts:
          path: build/reports
      - store_test_results:
          path: build/test-results

  add_timestamp_to_static_files:
    executor: jdk-executor
    <<: *work_directory
    steps:
      - checkout
      - run: sh build_time.sh
      - persist_to_workspace:
          root: ~/velocity-template-tester
          paths:
            - src/main/resources/public

  minify_js:
    docker:
      - image: devatherock/minify-js:3.1.0
        <<: *docker_auth
    <<: *resource_class
    <<: *work_directory
    environment:
      PARAMETER_INPUT_PATH: src/main/resources/public
      PARAMETER_ADD_SUFFIX: false
    steps:
      - checkout
      - attach_workspace:
          at: ~/velocity-template-tester
      - run: node /app/bin/cli.mjs
      - persist_to_workspace:
          root: ~/velocity-template-tester
          paths:
            - src/main/resources/public

  build:
    executor: jdk-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/velocity-template-tester
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies
      - run: |
          ./gradlew build sonar -Dsonar.token=$SONAR_TOKEN
      - persist_to_workspace:
          root: ~/velocity-template-tester
          paths:
            - build
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - store_artifacts:
          path: build/reports
      - store_test_results:
          path: build/test-results

  integration_test:
    parameters:
      runner:
        type: executor
    executor: << parameters.runner >>
    steps:
      - checkout
      - attach_workspace:
          at: ~/velocity-template-tester
      - restore_cache:
          keys:
            - v1-integration-{{ checksum "build.gradle" }}
            - v1-integration
      - run: |
          make integration-test
      - store_test_results:
          path: build/test-results
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-integration-{{ checksum "build.gradle" }}

  publish:
    executor: jdk-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/velocity-template-tester
      - run: |
          TAG=${CIRCLE_SHA1:0:8}
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker buildx create --name rockbuilder \
            --driver docker-container --use --bootstrap
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --push \
            -t devatherock/velocity-template-tester:$TAG \
            -t devatherock/velocity-template-tester:latest \
            -f docker/Dockerfile .

  publish_release:
    executor: jdk-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/velocity-template-tester
      - run: |
          TAG=${CIRCLE_TAG#v}
          DEV_TAG=${CIRCLE_SHA1:0:8}
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker buildx create --name rockbuilder \
            --driver docker-container --use --bootstrap
          docker buildx imagetools create \
            -t devatherock/velocity-template-tester:$TAG devatherock/velocity-template-tester:$DEV_TAG

  deploy:
    executor: jdk-executor
    <<: *resource_class
    steps:
      - run:
          name: Trigger deployment to render.com
          command: |
            curl $RENDER_DEPLOY_HOOK

workflows:
  version: 2.1
  build_publish:
    jobs:
      - templates/yaml_validator:
          name: validate_yamls
          context:
            - docker-credentials
          work_dir: '~/<< pipeline.parameters.repo_name >>'
          filters:
            branches:
              only: master
      - add_timestamp_to_static_files:
          context:
            - docker-credentials
          requires:
            - validate_yamls
      - minify_js:
          context:
            - docker-credentials
          requires:
            - add_timestamp_to_static_files
      - build:
          context:
            - docker-credentials
            - sonar-credentials
            - dependencycheck-credentials
          requires:
            - minify_js
      - publish:
          context:
            - docker-credentials
          requires:
            - build
      - templates/dockerhub_readme_update:
          name: dockerhub_readme
          context:
            - docker-credentials
            - dockerhub-readme-credentials
          docker_image: '<< pipeline.parameters.repo_name >>'
          image_description: 'UI/API for testing Apache Velocity templates'
          work_dir: '~/<< pipeline.parameters.repo_name >>'
          requires:
            - publish
      - integration_test:
          name: integration_test_amd
          context:
            - docker-credentials
          runner: machine-executor
          requires:
            - publish
      - integration_test:
          name: integration_test_arm
          context:
            - docker-credentials
          runner: arm-executor
          requires:
            - dockerhub_readme
      - templates/slack:
          name: notify
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - integration_test_amd
            - integration_test_arm

  release:
    jobs:
      - publish_release:
          context:
            - docker-credentials
          <<: *release_filter
      - deploy:
          context:
            - docker-credentials
          <<: *release_filter
          requires:
            - publish_release
      - templates/slack:
          name: notify
          context:
            - docker-credentials
            - slack-webhook
          <<: *release_filter
          requires:
            - deploy

  pr_check:
    jobs:
      - templates/changelog_updater:
          name: changelog_updater
          context:
            - docker-credentials
            - changelog-updater-credentials
          <<: *pr_filter
      - templates/yaml_validator:
          name: validate_yamls
          context:
            - docker-credentials
          work_dir: '~/<< pipeline.parameters.repo_name >>'
          requires:
            - changelog_updater
      - add_timestamp_to_static_files:
          context:
            - docker-credentials
          requires:
            - validate_yamls
      - minify_js:
          context:
            - docker-credentials
          requires:
            - add_timestamp_to_static_files            
      - test:
          context:
            - docker-credentials
            - sonar-credentials
            - dependencycheck-credentials
          <<: *pr_filter
          requires:
            - minify_js
