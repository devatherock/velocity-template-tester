plugins {
    id "org.jetbrains.kotlin.jvm" version "1.5.31"
    id "org.jetbrains.kotlin.kapt" version "1.5.31"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.5.31"
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "application"
    id 'groovy'
    id 'jacoco'
    id 'org.sonarqube' version '3.3'
    id 'com.diffplug.spotless' version '5.17.0'
    id 'org.jlleitschuh.gradle.ktlint' version '10.2.0'
}

version "0.9.0"
group "io.github.devatherock"
targetCompatibility = '1.8'

repositories {
    mavenCentral()
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"

    implementation "io.micronaut:micronaut-runtime"
    implementation "io.swagger.core.v3:swagger-annotations"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut.micrometer:micronaut-micrometer-core"
    implementation "io.micronaut:micronaut-management"

    implementation group: 'org.apache.velocity', name: 'velocity-engine-core', version: '2.3'
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '6.6'

    kapt platform("io.micronaut:micronaut-bom:$micronautVersion")
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    kapt "io.micronaut.configuration:micronaut-openapi"

    kaptTest platform("io.micronaut:micronaut-bom:$micronautVersion")
    kaptTest "io.micronaut:micronaut-inject-java"

    runtimeOnly "com.fasterxml.jackson.module:jackson-module-kotlin:2.13.0"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.6"

    compileOnly "org.graalvm.nativeimage:svm"
    annotationProcessor "io.micronaut:micronaut-graal"

    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"

    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "io.micronaut.test:micronaut-test-spock"
    testImplementation "io.micronaut:micronaut-http-client"

    testImplementation group: 'org.codehaus.groovy', name: 'groovy-all', version: '3.0.9'
    testImplementation group: 'org.spockframework', name: 'spock-core', version: '2.0-groovy-3.0'
}

test.classpath += configurations.developmentOnly

mainClassName = "io.github.devatherock.velocity.tester.Application"

test {
    useJUnitPlatform()
}

allOpen {
    annotation("io.micronaut.aop.Around")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        // Will retain parameter names for Java reflection
        javaParameters = true
        useIR = true
    }
}

shadowJar {
    mergeServiceFiles()
}

run {
    classpath += configurations.developmentOnly
    jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote', '-XshowSettings:vm')
    systemProperties(System.properties)
}

ext.jacoco = [
    exclusions: [
        'io/github/devatherock/velocity/tester/Application.class',
        'io/github/devatherock/velocity/tester/util/VelocityUtil.class'
    ],
    coverageThresholds: [
        'io.github.devatherock.velocity.tester.controller.VelocityController': [
            'BRANCH': 0.50,
            'COMPLEXITY': 0.50,
            'INSTRUCTION': 0.86
        ],
        'io.github.devatherock.velocity.tester.util.VelocityUtil.Companion': [
            'BRANCH': 0.90,
            'COMPLEXITY': 0.83,
            'INSTRUCTION': 0.95
        ]
    ]
]

apply from: 'https://raw.githubusercontent.com/devatherock/gradle-includes/master/checks.gradle'